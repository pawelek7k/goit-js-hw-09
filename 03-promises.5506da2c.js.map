{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAGMC,GADYC,SAASC,cAAc,yBAC5BD,SAASC,cAAc,UAEpC,SAASC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3B,IAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,WACLH,EACFF,EAAQ,CAAEH,WAAUC,UAEpBG,EAAO,CAAEJ,WAAUC,S,GAEpBA,E,IAIPL,EAAKa,iBAAiB,UAAU,SAAAC,GAC9BA,EAAMC,iBAEN,IAAMC,EAAkBhB,EAAKiB,SAASZ,MAAMa,MACtCC,EAAiBnB,EAAKiB,SAASG,KAAKF,MACpCG,EAAcrB,EAAKiB,SAASZ,MAAMa,MAExC,GAAIF,EAAkB,GAAKG,EAAiB,GAAKE,EAAc,EAC7DC,MAAM,qDAEN,IAAK,IAAIC,EAAI,EAAGA,EAAIF,EAAaE,IAAK,CAGpCpB,EAAc,EAAG,MACdqB,MAAK,SAAAC,G,IAAGrB,EAAQqB,EAARrB,SAAUC,EAAKoB,EAALpB,MACjBqB,EAAA5B,GAAS6B,OAAOC,QACd,qBAAoCC,OAAfzB,EAAS,QAAYyB,OAANxB,EAAM,M,IAG7CyB,OAAM,SAAAL,G,IAAGrB,EAAQqB,EAARrB,SAAUC,EAAKoB,EAALpB,MAClBqB,EAAA5B,GAAS6B,OAAOI,QAAQ,oBAAmCF,OAAfzB,EAAS,QAAYyB,OAANxB,EAAM,M,IAKzEL,EAAKgC,O","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst submitBtn = document.querySelector(\"button[type='submit']\");\nconst form = document.querySelector('.form');\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n\nform.addEventListener('submit', event => {\n  event.preventDefault();\n\n  const firstDelayValue = form.elements.delay.value;\n  const delayStepValue = form.elements.step.value;\n  const amountValue = form.elements.delay.value;\n\n  if (firstDelayValue < 0 || delayStepValue < 0 || amountValue < 0) {\n    alert('Please enter positive values for all fields.');\n  } else {\n    for (let i = 0; i < amountValue; i++) {\n      const position = i + 1;\n\n      createPromise(2, 1500)\n        .then(({ position, delay }) => {\n          Notiflix.Notify.success(\n            `Fulfilled promise ${position} in ${delay}ms`\n          );\n        })\n        .catch(({ position, delay }) => {\n          Notiflix.Notify.failure(`Rejected promise ${position} in ${delay}ms`);\n        });\n    }\n  }\n\n  form.reset();\n});\n"],"names":["$ejkSG","parcelRequire","$ce04d3a99e08e73b$var$form","document","querySelector","$ce04d3a99e08e73b$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","addEventListener","event","preventDefault","firstDelayValue","elements","value","delayStepValue","step","amountValue","alert","i","then","param","$parcel$interopDefault","Notify","success","concat","catch","failure","reset"],"version":3,"file":"03-promises.5506da2c.js.map"}